RED='\033[0;31m'
GREEN='\033[0;32m'
BROWN='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;036m'

LIGHTRED='\033[1;31m'
LIGHTGREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'
LIGHTPURPLE='\033[1;35m'
LIGHTCYAN='\033[1;036m'

BLACK='\033[0;30'
DARKGREY='\033[1;30'
LIGHTGREY='\033[0;37'
WHITE='\033[1;37'

BOLD=''
OFF='\033[m'

# Generate dirty status flag for Git and SVN.
__git_svn_status () {
	local git_status=$(git status -s 2> /dev/null)
	local svn_info=$(svn info 2> /dev/null)
	if [[ $git_status =~ ^\ *[AMD] ]]; then
		# Generate Git output for PS1.
        echo -n $1
	elif [[ $svn_info ]]; then
		# Generate SVN output for PS1.
		[[ -n $(svn status | grep '^\s*[?ACDMR?!]') ]] && echo -n $1
	fi
}

__git_stash_flag () {
    [[ -n $(git stash list 2> /dev/null) ]] && echo -n $1
}

__git_added_flag () {
    [[ $(git status 2> /dev/null) =~ "Untracked files:" ]] && echo -n $1
}

# Generate branch/location information for Git and SVN repositories.
__git_svn_info () {
	local git_status=$(git status 2> /dev/null)
	local svn_info=$(svn info 2> /dev/null)
	local tag=
    if [[ -n $(type -t __git_ps1) ]] && [[ -n $(__git_ps1) ]]; then
        # Generate Git output using standard completion function.
        tag=$(__git_ps1 '%s')
	elif [[ -n $git_status ]]; then
        # Generate Git output for PS1.
        tag=$(git symbolic-ref HEAD 2> /dev/null | sed -e 's/^refs\/heads\/\(.*\)/\1/')
	elif [[ -n $svn_info ]]; then
		# Generate SVN output for PS1.
		local url=`svn info | awk '/URL:/ {print $2}'`
		if [[ $url =~ trunk ]]; then
			tag=trunk
		elif [[ $url =~ /branches/ ]]; then
			tag=$(echo -n $url | sed -e 's#^.*/\(branches/.*\)/.*$#\1#')
		elif [[ $url =~ /tags/ ]]; then
			tag=$(echo -n $url | sed -e 's#^.*/\(tags/.*\)/.*$#\1#')
		else
			tag=..
		fi
	fi

	format=' (%s)'
	if [[ -n $1 ]]; then
		format=$1
	fi

	if [[ -n $tag ]]; then
		printf "$format" $tag
	fi
}

dirty_flag='*'
stash_flag='+'
added_flag='?'
if [[ $EUID == 0 ]]; then
	user_color=$LIGHTRED
else
	user_color=$LIGHTGREEN
fi

PS1INNER="\[$user_color\]\u@\h\[$OFF\]:\[$LIGHTBLUE\]\W\[$OFF\]"
if [[ $BETTER_PS1 == true ]]; then
    PS1INNER=$PS1INNER'$(__git_svn_info "|\['$BROWN'\]%s")$(__git_stash_flag "\['$BROWN'\]'$stash_flag'")$(__git_svn_status "\['$RED'\]'$dirty_flag'")$(__git_added_flag "\['$PURPLE'\]'$added_flag'")\['$OFF'\]'
fi

PS1='['$PS1INNER']\$ '
if [[ $LIVE_TERM_TITLE == true ]]; then
	PS1="\[\033]0;\u@\h:\W\007\]$PS1"
fi

export PS1
